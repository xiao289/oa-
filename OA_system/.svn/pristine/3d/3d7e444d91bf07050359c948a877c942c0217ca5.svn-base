<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.LogMapper">
  <resultMap id="BaseResultMap" type="com.bean.Log">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="roleName" jdbcType="VARCHAR" property="rolename" />
    <result column="event" jdbcType="VARCHAR" property="event" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>

  <select id="findalllog" parameterType="map" resultMap="BaseResultMap">
    select * from log
    <where>
      <if test="username != null and username != ''">
        and username like '%${username}%'
      </if>
      <if test="shijian1 != null and shijian1 !=''">
        and updatetime >= '${shijian1}'
      </if>
      <if test="shijian2 != null and shijian2 !=''">
        and updatetime &lt;= '${shijian2}'
      </if>


    </where>
  </select>

  <sql id="Base_Column_List">
    id, userName, roleName, event, remark, updatetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bean.Log">
    insert into log ( userName, roleName,
      event, remark, updatetime
      )
    values (#{username,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR},
      #{event,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        userName,
      </if>
      <if test="rolename != null">
        roleName,
      </if>
      <if test="event != null">
        event,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="event != null">
        #{event,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Log">
    update log
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null">
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="event != null">
        event = #{event,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Log">
    update log
    set userName = #{username,jdbcType=VARCHAR},
      roleName = #{rolename,jdbcType=VARCHAR},
      event = #{event,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>