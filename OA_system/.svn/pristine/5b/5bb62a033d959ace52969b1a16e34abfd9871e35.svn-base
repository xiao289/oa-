package com.web;

import com.bean.Log;
import com.bean.Menu;
import com.bean.User;
import com.bean.Organization;
import com.bean.Role;
import com.github.pagehelper.PageInfo;
import com.service.LogService;
import com.service.OrganizationService;
import com.service.RoleService;
import com.service.UserService;
import com.util.ImageUtil;
import com.util.LogUtil;
import com.util.UserExcelUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.*;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;

import java.util.List;

@Controller
@SessionAttributes({"u1"})
public class UserController {

    @Autowired
    private UserService userService;
    @Autowired
    private RoleService roleService;
    @Autowired
    private OrganizationService organizationService;
    @Autowired
    private LogService logService;

    //登陆
    @RequestMapping("/login")
    public void loginsystem(User user, HttpServletResponse response, Map map, String yanzheng, HttpSession session) {
        response.setContentType("text/html;charset=utf-8");
        try {
            PrintWriter out = response.getWriter();
            User user1 = userService.login(user);
            String yz = ImageUtil.getCode();

            if (user1==null){
                out.print("<script>alert('用户名密码不正确');location.href='login.jsp'</script>");

            }else {
                if(user1.getState()==1){
                    out.print("<script>alert('此用户被禁用');location.href='login.jsp'</script>");
                }else if(user1.getState()==0){
                    if (yz.equalsIgnoreCase(yanzheng)){
                        map.put("u1", user1);
                        session.setAttribute("u1",user1);
                        session.setAttribute("loginname",user1);
                        out.print("<script>alert('登陆成功');location.href='index.jsp'</script>");
                    }else {
                        out.print("<script>alert('验证码输入不正确');location.href='login.jsp'</script>");

                    }
                }
                }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * 查询所有得user
     * @param username 模糊查登陆  loginName 姓名
     * @param name 模糊查真实姓名
     * @param index 页码
     * @param size 显示数量
     * @param map  map传值
     * @return  返回到user list.jsp 主界面
     */
    @RequestMapping("/resource/system/user/getallUser")
    public String findalluser(String username, String name,
                              @RequestParam(value = "index",defaultValue = "1") int index,
                              @RequestParam(value = "size", defaultValue = "5") int size, ModelMap map){
        //查询user返回pageinfo
        PageInfo pageInfo = userService.findalluser(username, name, index, size,null);
        map.put("pi",pageInfo);
        map.put("loginname1", username);
        map.put("realname",name);
        return "resource/system/user/list";
    }

    /**
     * 添加用户之前查询部门和机构信息
     * @param map
     * @return
     */
    @RequestMapping("/resource/system/readyuseradd")
    public String readyadduser(ModelMap map){
        //查询角色列表传进前台
        List<Role> roles = roleService.findallrole();
        map.put("role",roles);
        //查询机构名称传入前台
        List<Organization> organizations = organizationService.findallorganization();
        map.put("org", organizations);
        return "/resource/system/user/add";
    }

    /**
     * 添加user
     * @param user
     * @return
     */
    @RequestMapping("/resource/system/user/adduser")
    public String addueser(User user, MultipartFile photo1, Log log, HttpServletRequest request){
        Log log1 = LogUtil.setterLog(log);
        logService.insertSelective(log1);

        String path = request.getRealPath("image");
        try {
            //复制文件
            photo1.transferTo(new File(path +"/" + photo1.getOriginalFilename()));

        } catch (IOException e) {
            e.printStackTrace();
        }
        String file = photo1.getOriginalFilename();
        user.setPhoto(file);
        userService.insert(user);
        return "redirect:/resource/system/user/getallUser";
    }

    /**
     * 准备修改user
     * 查询用户信息，查询机构，角色信息
     * @param userid
     * @param map
     * @return
     */
    @RequestMapping("/resource/system/user/readyedituser")
    public String editready(int userid, ModelMap map){

        //查询角色列表传进前台
        List<Role> roles = roleService.findallrole();
        map.put("role",roles);
        //查询机构名称传入前台
        List<Organization> organizations = organizationService.findallorganization();
        map.put("org", organizations);
        User user = userService.selectByPrimaryKey(userid);
        map.put("user",user);
        return "/resource/system/user/edit";
    }

    /**
     * 根据主键删除user
     * @param userid
     * @return
     */
    @RequestMapping("/resource/system/user/deleteuser")
    public String edituser(int userid, Log log){
        Log log1 = LogUtil.setterLog(log, "删除user");
        //插入进log表单
        logService.insertSelective(log1);
        userService.deleteByPrimaryKey(userid);
        return "redirect:/resource/system/user/getallUser";
    }

    /**
     * 接受id得集合  删除user
     * @param single
     * @return
     */
    @RequestMapping("/resource/system/user/deleteusers")
    public String editusers(int[] single){


        userService.deleteByArray(single);
        return "redirect:/resource/system/user/getallUser";
    }

    /**
     * 更新user
     * @param user
     * @return
     */
    @RequestMapping("/resource/system/user/editstate")
    public String editstate(User user, Log log,MultipartFile photo1,HttpServletRequest request){
        log.setRemark("无");
        Log log1 = LogUtil.setterLog(log);
        //添加表单
        logService.insertSelective(log1);
        //判断neme名
        if (photo1 != null){
            if (photo1.getOriginalFilename() != null){
                if (user.getPhoto() == null || user.getPhoto().equals(photo1.getOriginalFilename()) ){
                    String path = request.getRealPath("image");
                    try {
                        //复制文件
                        photo1.transferTo(new File(path +"/" + photo1.getOriginalFilename()));

                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    String file = photo1.getOriginalFilename();
                    user.setPhoto(file);
                }
            }
        }

        userService.updateByPrimaryKeySelective(user);
        return "redirect:/resource/system/user/getallUser";
    }

    /**
     * 导出用户的excel
     * @param single
     * @param response
     */
    @RequestMapping("/resource/system/user/daochu")
    public void edituser(int[] single, HttpServletResponse response,Log log){
        Log log1 = LogUtil.setterLog(log, "无", "导出excel");
        logService.insertSelective(log1);
        PageInfo pageInfo = userService.findalluser(null, null, 0, 0, single);
        List list = pageInfo.getList();

        UserExcelUtil.headers = new String[]{"用户名","真实姓名","角色","机构","部门","状态"};
        UserExcelUtil.createhead(6);
        UserExcelUtil.createother(list);
        SimpleDateFormat simpleDateFormat=new SimpleDateFormat("yyyyMMddhhmmss");
        String date= simpleDateFormat.format(new Date());
        FileOutputStream outputStream = null;
        try {
            outputStream = new FileOutputStream("f:\\alluser" + date + ".xls");
            UserExcelUtil.export(outputStream);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }finally {
            try {
                outputStream.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        response.setContentType("text/html;charset=utf-8");
        try {
            PrintWriter out2=response.getWriter();
            out2.print("<script>alert('导出成功');location.href='/resource/system/user/getallUser'</script>");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //退出系统
    @RequestMapping("/loginout")
    public void tologout(HttpSession session,HttpServletRequest request,HttpServletResponse response,SessionStatus sessionStatus) {
         sessionStatus.setComplete();
        try {
            PrintWriter out=response.getWriter();
            out.print("<script>top.location.href='/login.jsp'</script>");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    @RequestMapping("/resource/system/user/lookuser")
    public String lookuser(int id,ModelMap map){
        User user = userService.selectByPrimaryKey(id);
        map.put("user",user);
        return "/resource/system/user/look";
    }

    //修改密码
    @RequestMapping("/resource/myself/demo3/changepass")
    public void alert(User record,HttpServletResponse response,SessionStatus sessionStatus){
        int k=  userService.updateByPrimaryKeySelective(record);
        response.setContentType("text/html;charset=utf-8");
        try {
            PrintWriter out =response.getWriter();
            if(k>0){
                sessionStatus.setComplete();
                out.print("<script >alert('修改成功，请重新登录');top.location.href='/login.jsp'</script>");
            }else {
                out.print("<script>alert('密码修改失败');location.href='list.jsp'</script>");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

}
