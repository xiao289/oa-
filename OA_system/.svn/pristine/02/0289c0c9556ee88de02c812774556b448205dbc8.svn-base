package com.web;

import com.bean.*;
import com.github.pagehelper.PageInfo;
import com.service.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

@Controller
public class CBBController {
    @Autowired
    private CachetService cachetService;
    @Autowired
    private UserService userService;
    @Autowired
    private DeptService deptService;
    @Autowired
    private BooksService booksService;
    @Autowired
    private RoleService roleService;
    @Autowired
    private VcardService vcardService;

    /**
     * 展示用章添加页面信息
     * @param modelMap
     * @param request
     * @return
     */
    @RequestMapping("xingzheng/room/queryallchapter")
    public String queryallchapter(ModelMap modelMap, HttpServletRequest request){
        User user1 = (User) request.getSession().getAttribute("loginname");
        Dept dept = deptService.selectByPrimaryKey(user1.getDeptid());
        List list=new ArrayList();
        list.add(dept);
        user1.setDepts(list);
        modelMap.put("loginname",user1);
        //根据roleid来获取有权限额信息
        List<User> admin = userService.querybyroleid(1);
        modelMap.put("admins",admin);
        return "/resource/xingzheng/chapter/list";
    }

    /**
     * 添加用章管理
     */
    @RequestMapping("/xingzheng/chapter/add")
    public void add(Cachet cachet,HttpServletResponse response){
        int i = cachetService.insert(cachet);
        response.setContentType("text/html;charset=utf-8");
        try {
            PrintWriter writer = response.getWriter();
            if(i>0){
                writer.write("<script>alert('添加用章成功');location.href='/resource/myself/demo1/getList'</script>");
            }else{
                writer.write("<script>alert('添加用章失败');location.href='xingzheng/room/queryallchapter'</script>");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * 展示书籍信息
     * @param index
     * @param size
     * @param modelMap
     * @return
     */
    @RequestMapping("/xingzheng/books/queryallbooks")
    public String queryallbooks(@RequestParam(value = "index",defaultValue = "1") int index,
                                @RequestParam(defaultValue = "5") int size,ModelMap modelMap){
        PageInfo pageInfo = booksService.queryallbooks(index, size);
        modelMap.put("page",pageInfo);
        return "resource/xingzheng/books/view";
    }

    /**
     * 借书前的准备
     * @param request
     * @param modelMap
     * @return
     */
    @RequestMapping("xingzheng/books/rever")
    public String reser(HttpServletRequest request,ModelMap modelMap){
        User user1 = (User) request.getSession().getAttribute("loginname");
        Dept dept = deptService.selectByPrimaryKey(user1.getDeptid());
        List list=new ArrayList();
        list.add(dept);
        user1.setDepts(list);
        modelMap.put("loginname",user1);
        //根据roleid来获取有权限额信息
        List<User> admin = userService.querybyroleid(1);
        modelMap.put("admins",admin);
        //获取到所有的图书信息
        return "/resource/xingzheng/book/list";
    }

    /**
     * 添加名片申请钱的准备
     * @param request
     * @param modelMap
     * @return
     */
    @RequestMapping("xingzheng/card/querycard")
    public String queryallcard(HttpServletRequest request,ModelMap modelMap){
        User user1 = (User) request.getSession().getAttribute("loginname");
        Dept dept = deptService.selectByPrimaryKey(user1.getDeptid());
        List list=new ArrayList();
        list.add(dept);
        user1.setDepts(list);
        modelMap.put("loginname",user1);
        //根据roleid来获取有权限额信息
        List<User> admin = userService.querybyroleid(1);
        Role role = roleService.selectByPrimaryKey(1);
        modelMap.put("admins",admin);
        modelMap.put("role",role);
        return "/resource/xingzheng/card/list";
    }

    @RequestMapping("/xingzheng/card/addcard")
    public void addcard(Vcard vcard,HttpServletResponse response){
        int i = vcardService.insertSelective(vcard);
        response.setContentType("text/html;charset=utf-8");
        try {
            PrintWriter writer = response.getWriter();
            if(i>0){
                writer.write("<script>alert('添加成功');location.href='/resource/myself/demo1/getList'</script>");
            }else{
                writer.write("<script>alert('添加失败');location.href='xingzheng/card/querycard'</script>");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


}
